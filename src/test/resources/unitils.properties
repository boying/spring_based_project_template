#启用unitils所需模块
unitils.modules=database,dbunit,spring

#自定义扩展模块，详见实例源码
#unitils.module.dbunit.className=org.unitils.dbunit.DbUnitModule
unitils.module.dbunit.className=boying.MySqlDbUnitModule

#配置数据库连接
database.driverClassName=com.mysql.jdbc.Driver
database.url=jdbc:mysql://spring:3306/book_test?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8
database.userName=root
database.password=123456
#配置为数据库名称
database.schemaNames=book_test
#配置数据库方言
database.dialect=mysql

#配置数据库维护策略.请注意下面这段描述
# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each
# test run, when creating the DataSource that provides access to the unit test database.
updateDataBaseSchema.enabled=false

#配置数据库表创建策略，是否自动建表以及建表sql脚本存放目录
#dbMaintainer.autoCreateExecutedScriptsTable=false
#dbMaintainer.script.locations=D:\workspace\unit-demo\src\test\java\com\candle\dao

#数据集加载策略
#CleanInsertLoadStrategy:先删除dateSet中有关表的数据，然后再插入数据
#InsertLoadStrategy：只插入数据
#RefreshLoadStrategy:有同样key的数据更新，没有的插入
#UpdateLoadStrategy:有同样key的数据更新，没有的不做任何操作
DbUnitModule.DataSet.loadStrategy.default=org.unitils.dbunit.datasetloadstrategy.impl.CleanInsertLoadStrategy

#配置数据集工厂
DbUnitModule.DataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXmlDataSetFactory
DbUnitModule.ExpectedDataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXmlDataSetFactory

#配置事务策略 commit、rollback 和disabled；或者在代码的方法上标记@Transactional(value=TransactionMode.ROLLBACK)
#commit 是单元测试方法过后提交事务
#rollback 是回滚事务
#disabled 是没有事务，默认情况下，事务管理是disabled
DatabaseModule.Transactional.value.default=rollback

#配置数据集结构模式XSD生成路径，可以自定义目录，但不能为空
dataSetStructureGenerator.xsd.dirName=/
dbMaintainer.generateDataSetStructure.enabled=true